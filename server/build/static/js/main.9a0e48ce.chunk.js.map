{"version":3,"sources":["component/signup/form-img.jpg","component/header/header.js","component/signup/signup.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","DenseAppBar","classes","className","AppBar","position","Toolbar","variant","IconButton","edge","color","aria-label","Typography","Transition","React","forwardRef","props","ref","Slide","direction","Signup","useState","first_name","last_name","Profession","email","phone_number","Gender","country","city","state","setstate","open","setOpen","handleClose","updateData","e","target","name","value","doSignup","a","preventDefault","console","log","axios","post","then","res","data","success","Dialog","TransitionComponent","keepMounted","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","onClick","class","src","require","alt","for","type","onChange","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9a0e48ce.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/form-img.6bd7344d.jpg\";","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function DenseAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar variant=\"dense\">\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" color=\"inherit\">\r\n            Be Professional\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import React , {useState} from \"react\";\r\nimport \"../signup/style.css\";\r\nimport axios from \"axios\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n  });\r\n  \r\nconst Signup = () => {\r\n  \r\nconst [state, setstate] = useState({\r\n    first_name: '',\r\n    last_name : '',\r\n    Profession: '',\r\n    email : '',\r\n    phone_number : '',\r\n    Gender: '',\r\n    country: '',\r\n    city: ''    \r\n\r\n})\r\n\r\nconst [open, setOpen] = React.useState(false);\r\n\r\nconst handleClickOpen = () => {\r\n  setOpen(true);\r\n};\r\n\r\nconst handleClose = () => {\r\n  setOpen(false);\r\n};\r\n\r\n  const  updateData = (e) => {\r\n    // console.log(\"updated\");\r\n    setstate({...state , [e.target.name]: e.target.value})\r\n  };\r\n\r\n  const doSignup = async (e) => {\r\n    e.preventDefault();\r\n    console.log(state);\r\n  \r\n\r\n \r\n   axios.post(\"/signup\", state).then((res) => {\r\n      if (res.data.success == true) {\r\n        console.log(res.data.success);\r\n        handleClickOpen()\r\n        console.log(\"its realy\");\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n\r\n\r\n\r\n <div>\r\n{\r\n        open ?    <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">{\"Thank You !!!\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n          You're Register now \r\n          Good Luck for New Journey of Development\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n       \r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      : null\r\n}\r\n </div>\r\n\r\n      <div class=\"main\">\r\n        <div class=\"container\">\r\n          <div class=\"signup-content\">\r\n            <div class=\"signup-img\">\r\n              <img src={require(\"./form-img.jpg\")} alt=\"\" />\r\n              <div class=\"signup-img-content\">\r\n                <h2>Register now </h2>\r\n                <p>while seats are available !</p>\r\n              </div>\r\n            </div>\r\n            <div class=\"signup-form\">\r\n              <h1 className=\"heading123\"> Course Detail </h1>\r\n\r\n              <table>\r\n                <tr>\r\n                  <th>Module One </th>\r\n                  <th>Module Two </th>\r\n                  <th>Module Three </th>\r\n                </tr>\r\n                <tr>\r\n                  <td>HTML</td>\r\n                  <td>Reactjs</td>\r\n                  <td>Deployment</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>CSS</td>\r\n                  <td>Nodejs</td>\r\n                  <td>Test</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>GitHub</td>\r\n                  <td>MongoDB</td>\r\n                  <td> Remotely Intenship</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>JaveScript</td>\r\n                  <td>Express js</td>\r\n                  <td>Pro Training</td>\r\n                </tr>\r\n              </table>\r\n\r\n              <h1 className=\"heading12\"> Be_Professional Form </h1>\r\n              <form class=\"register-form\" id=\"register-form\">\r\n                <div class=\"form-row\">\r\n                  <div class=\"form-group\">\r\n                    <div class=\"form-input\">\r\n                      <label for=\"first_name\" class=\"required\">\r\n                        First name\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"first_name\"\r\n                        onChange={updateData}\r\n                        id=\"first_name\"\r\n                      />\r\n                    </div>\r\n                    <div class=\"form-input\">\r\n                      <label for=\"last_name\" class=\"required\">\r\n                        Last name\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"last_name\"\r\n                        onChange={updateData}\r\n                        id=\"last_name\"\r\n                      />\r\n                    </div>\r\n                    <div class=\"form-input\">\r\n                      <label for=\"Profession\" class=\"required\">\r\n                        Profession\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"Profession\"\r\n                        onChange={updateData}\r\n                        id=\"Profession\"\r\n                      />\r\n                    </div>\r\n                    <div class=\"form-input\">\r\n                      <label for=\"email\" class=\"required\">\r\n                        Email\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"email\"\r\n                        onChange={updateData}\r\n                        id=\"email\"\r\n                      />\r\n                    </div>\r\n                    <div class=\"form-input\">\r\n                      <label for=\"phone_number\" class=\"required\">\r\n                        Phone number\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"phone_number\"\r\n                        onChange={updateData}\r\n                        id=\"phone_number\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"form-group\">\r\n                    <div class=\"form-radio\">\r\n                      <div class=\"label-flex\">\r\n                        <label for=\"Gender\">Gender</label>\r\n                      </div>\r\n                      <div class=\"form-radio-group\" onChange={updateData}>\r\n                        <div class=\"form-radio-item\">\r\n                          <input\r\n                            type=\"radio\"\r\n                            name=\"Gender\"\r\n                            value=\"Female\"\r\n                            id=\"Female\"\r\n                          />\r\n                          <label for=\"Female\">Female</label>\r\n                          <span class=\"check\"></span>\r\n                        </div>\r\n                        <div class=\"form-radio-item\">\r\n                          <input\r\n                            type=\"radio\"\r\n                            name=\"Gender\"\r\n                            value=\"Male\"\r\n                            id=\"Male\"\r\n                          />\r\n                          <label for=\"Male\">Male</label>\r\n                          <span class=\"check\"></span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"form-input\">\r\n                      <label for=\"country\">Country</label>\r\n                      <input\r\n                        onChange={updateData}\r\n                        type=\"text\"\r\n                        name=\"country\"\r\n                        id=\"country\"\r\n                      />\r\n                    </div>\r\n                    <div class=\"form-input\">\r\n                      <label for=\"city\">City</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        onChange={updateData}\r\n                        name=\"city\"\r\n                        id=\"city\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"form-submit\">\r\n                  <button\r\n                    type=\"submit\"\r\n                    value=\"Submit\"\r\n                    onClick={doSignup}\r\n                    class=\"submit\"\r\n                    id=\"submit\"\r\n                    name=\"submit\"\r\n                  >\r\n                    Save\r\n                  </button>\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Reset\"\r\n                    class=\"submit\"\r\n                    id=\"reset\"\r\n                    name=\"reset\"\r\n                  />\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\n// render(){\r\n\r\nexport default Signup;\r\n","import React from 'react';\n// import logo from './logo.svg';\n// import './App.css';\nimport DenseAppBar from './component/header/header'\nimport Signup from './component/signup/signup'\nfunction App() {\n  return (\n    <div className=\"App\">\n  <DenseAppBar/>\n  <Signup/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}